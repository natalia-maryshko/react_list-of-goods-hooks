{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","DEFAULT","sortField","setSortField","goodsReverse","setGoodsReverse","visibleGoods","goods","sortBy","isReverse","prepearedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","sorted","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAML,IAwBaE,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACMC,EA3BO,SAACC,EAAiBC,EAAkBC,GACjD,IAAIC,EAAc,YAAOH,GAoBzB,OAlBIC,GACFE,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQL,GACN,KAAKX,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXR,IACFC,EAAiBA,EAAeQ,WAG3BR,EAMcS,CAAOrB,EAAiBI,EAAWE,GAOxD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMlB,EAAaN,EAASiB,WACrCQ,KAAK,SACLF,UAAWG,IAAG,SAAU,UACtB,CAAE,WAAYrB,IAAcL,EAASiB,WAJzC,iCASA,wBACEO,QAAS,kBAAMlB,EAAaN,EAASmB,SACrCM,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CAAE,WAAYrB,IAAcL,EAASmB,SAJzC,4BASA,wBACEK,QAAS,kBAAMhB,GAAiBD,IAChCkB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CAAE,YAAanB,IAHvD,sBAQEF,GAAaE,IACb,wBACEiB,QAAS,kBAnCjBlB,EAAaN,EAASI,cACtBI,GAAgB,IAmCRiB,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,6BACGd,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.19984022.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n  DEFAULT = '',\n}\n\nconst sorted = (goods: string[], sortBy: SortType, isReverse: boolean) => {\n  let prepearedGoods = [...goods];\n\n  if (sortBy) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    prepearedGoods = prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.DEFAULT);\n  const [goodsReverse, setGoodsReverse] = useState(false);\n  const visibleGoods = sorted(goodsFromServer, sortField, goodsReverse);\n\n  const handleReset = () => {\n    setSortField(SortType.DEFAULT);\n    setGoodsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.ALPHABET)}\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SortType.ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SortType.LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setGoodsReverse(!goodsReverse)}\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !goodsReverse })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || goodsReverse) && (\n          <button\n            onClick={() => handleReset()}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}